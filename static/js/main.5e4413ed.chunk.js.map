{"version":3,"sources":["components/with-store-page/with-store-page.module.css","components/top-menu/top-menu.module.css","styles/store-item.module.css","modules/calendar/calendar.module.css","components/top-menu/top-menu.tsx","constants.ts","components/with-store-page/with-store-page.tsx","pages/store-func-page/store-func-page.tsx","pages/store-class-page/store-class-page.tsx","modules/calendar/components/calendar-header/calendar-header.tsx","modules/calendar/components/calendar-table/calendar-table-header.tsx","modules/calendar/components/calendar-table/calendar-table-row.tsx","modules/calendar/components/calendar-table/calendar-table.tsx","utils/date-utils.ts","modules/calendar/calendar-utils.ts","modules/calendar/calendar-constants.ts","modules/calendar/calendar.tsx","routes.ts","pages/calendar-page/calendar-page.tsx","index.tsx","modules/calendar/components/calendar-table/calendar-table.module.css","modules/calendar/components/calendar-header/calendar-header.module.css"],"names":["module","exports","TopMenu","React","routes","className","styles","map","routeItem","to","path","label","STORE_ITEM","brand","title","description","descriptionFull","price","currency","FULL_RUS_DAYS_NAMES","FULL_RUS_DAYS_NAMES_SORTED_BY_DATE_INDEX","slice","SHORT_RUS_DAYS_NAMES","MONTH_NAME_NOMENATIVE","MONTH_NAME_GENITIVE","withStorePage","WrappedComponent","storeItem","StoreFuncPage","cn","StoreClassPage","this","props","CalendarHeader","dayName","dayNumber","fullYear","monthNameGenitive","monthNameNominative","CalendarTableHeader","name","i","scope","CalendarTableRow","currentDate","matrixRow","isCurrentMonthDay","CalendarTable","calendarMatrix","getFirstDayOfDate","date","Date","getFullYear","getMonth","getNextDayDate","getDate","getCalendarStartDate","firstDayOfDateIsSunday","getDay","getFirstDayIsSunday","firstDayOfDateIndex","daysDiffIndex","createDateRow","Array","from","length","reduce","acc","_","row","push","createCalendarMatrix","currentMonth","monthOfDate","result","newCalendarRow","lastDate","createDateMatrix","month","createCalendarDay","Calendar","currentDay","monthNum","ROUTES","component","ReactDOM","render","exact","document","getElementById"],"mappings":"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","file":"static/js/main.5e4413ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"with-store-page_container__1SD5j\",\"window\":\"with-store-page_window__i_k3M\",\"highlight-window\":\"with-store-page_highlight-window__3AtfL\",\"highlight-overlay\":\"with-store-page_highlight-overlay__18757\",\"background-element\":\"with-store-page_background-element__3gLZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"top-menu_menu__3ZBJ0\",\"menu-item\":\"top-menu_menu-item__2sZ_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-content\":\"store-item_main-content__30Fl6\",\"description\":\"store-item_description__3Dh4J\",\"highlight-window\":\"store-item_highlight-window__3llvd\",\"mobile\":\"store-item_mobile__3uFQj\",\"highlight-overlay\":\"store-item_highlight-overlay__3IBA-\",\"divider\":\"store-item_divider__nYiEU\",\"purchase-info\":\"store-item_purchase-info__1Qn3c\",\"price\":\"store-item_price__2NhpU\",\"h1\":\"store-item_h1__2mHkw\",\"h3\":\"store-item_h3__1fvpa\",\"button\":\"store-item_button__1yguX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ui-datepicker\":\"calendar_ui-datepicker__3e-JQ\"};","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TRouteItem } from '../../routes';\r\nimport styles from './top-menu.module.css';\r\n\r\ntype TTopMenuProps = {\r\n    routes: TRouteItem[],\r\n};\r\n\r\nexport const TopMenu = React.memo(({ routes }: TTopMenuProps) => (\r\n    <ul className={styles['menu']}>\r\n        {routes.map((routeItem: TRouteItem) => (\r\n            <Link\r\n                className={styles['menu-item']}\r\n                key={routeItem.path}\r\n                to={routeItem.path}\r\n            >\r\n                {routeItem.label}\r\n            </Link>\r\n        ))}\r\n    </ul>\r\n));","import { TStoreItem } from './types';\r\n\r\nexport const FUNT_CURRENCY = 'Â£';\r\n\r\nexport const STORE_ITEM: TStoreItem = {\r\n    brand: 'Tiger of Sweden',\r\n    title: 'Leonard coat',\r\n    description: 'Minimalistic coat in cotton-blend',\r\n    descriptionFull: 'Men\\'s minimalistic overcoat in cotton-blend. Features a stand-up collar, concealed front closure and single back vent. Slim fit with clean, straight shape. Above-knee length.',\r\n    price: 399,\r\n    currency: FUNT_CURRENCY,\r\n}\r\n\r\nexport const DAYS_IN_WEEK = 7;\r\n\r\nexport const FULL_RUS_DAYS_NAMES = [\r\n    'ÐÐ¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº',\r\n    'ÐÑÐ¾ÑÐ½Ð¸Ðº',\r\n    'Ð¡ÑÐµÐ´Ð°',\r\n    'Ð§ÐµÑÐ²ÐµÑÐ³',\r\n    'ÐÑÑÐ½Ð¸ÑÐ°',\r\n    'Ð¡ÑÐ±Ð±Ð¾ÑÐ°',\r\n    'ÐÐ¾ÑÐºÑÐµÑÐµÐ½ÑÐµ',\r\n];\r\n\r\nexport const FULL_RUS_DAYS_NAMES_SORTED_BY_DATE_INDEX = [\r\n    ...FULL_RUS_DAYS_NAMES.slice(-1),\r\n    ...FULL_RUS_DAYS_NAMES.slice(0, 6),\r\n];\r\n\r\nexport const SHORT_RUS_DAYS_NAMES = [\r\n    'ÐÐ½',\r\n    'ÐÑ',\r\n    'Ð¡Ñ',\r\n    'Ð§Ñ',\r\n    'ÐÑ',\r\n    'Ð¡Ð±',\r\n    'ÐÑ',\r\n];\r\n\r\nexport const MONTH_NAME_NOMENATIVE = [\r\n    'Ð¯Ð½Ð²Ð°ÑÑ',\r\n    'Ð¤ÐµÐ²ÑÐ°Ð»Ñ',\r\n    'ÐÐ°ÑÑ',\r\n    'ÐÐ¿ÑÐµÐ»Ñ',\r\n    'ÐÐ°Ð¹',\r\n    'ÐÑÐ½Ñ',\r\n    'ÐÑÐ»Ñ',\r\n    'ÐÐ²Ð³ÑÑÑ',\r\n    'Ð¡ÐµÐ½ÑÑÐ±ÑÑ',\r\n    'ÐÐºÑÑÐ±ÑÑ',\r\n    'ÐÐ¾ÑÐ±ÑÑ',\r\n    'ÐÐµÐºÐ°Ð±ÑÑ',\r\n];\r\n\r\nexport const MONTH_NAME_GENITIVE = [\r\n    'Ð¯Ð½Ð²Ð°ÑÑ',\r\n    'Ð¤ÐµÐ²ÑÐ°Ð»Ñ',\r\n    'ÐÐ°ÑÑÐ°',\r\n    'ÐÐ¿ÑÐµÐ»Ñ',\r\n    'ÐÐ°Ñ',\r\n    'ÐÑÐ½Ñ',\r\n    'ÐÑÐ»Ñ',\r\n    'ÐÐ²Ð³ÑÑÑÐ°',\r\n    'Ð¡ÐµÐ½ÑÑÐ±ÑÑ',\r\n    'ÐÐºÑÑÐ±ÑÑ',\r\n    'ÐÐ¾ÑÐ±ÑÑ',\r\n    'ÐÐµÐºÐ°Ð±ÑÑ',\r\n];","import * as React from 'react';\r\nimport { STORE_ITEM } from '../../constants';\r\nimport { TStoreItem } from '../../types';\r\nimport styles from './with-store-page.module.css';\r\n\r\ntype TwithStorePageProps = {\r\n    storeItem: TStoreItem;\r\n};\r\n\r\nexport const withStorePage = (WrappedComponent: React.ComponentType<TwithStorePageProps>) => (\r\n    React.memo(() => (\r\n        <div className={styles['container']}>\r\n            <div className={styles['background-element']}>\r\n            </div>\r\n            <div className={styles['highlight-window']}>\r\n                <div className={styles['highlight-overlay']}></div>\r\n            </div>\r\n            <div className={styles['window']}>\r\n                <WrappedComponent storeItem={STORE_ITEM} />\r\n            </div>\r\n        </div>\r\n    ))\r\n);","import * as React from 'react';\r\nimport cn from 'classnames';\r\nimport { withStorePage } from '../../components/with-store-page';\r\nimport { FUNT_CURRENCY } from '../../constants';\r\nimport { TStoreItem } from '../../types';\r\nimport styles from '../../styles/store-item.module.css';\r\n\r\ntype TStoreFuncPageProps = {\r\n    storeItem: TStoreItem,\r\n};\r\n\r\nconst StoreFuncPageComponent = React.memo(({ storeItem: {\r\n    brand,\r\n    currency = FUNT_CURRENCY,\r\n    description,\r\n    descriptionFull,\r\n    title,\r\n    price,\r\n}}: TStoreFuncPageProps) => (\r\n<div className={styles['main-content']}>\r\n    <h2>\r\n        {brand}\r\n    </h2>\r\n    <h1 className={styles['h1']}>\r\n        {title}\r\n    </h1>\r\n    <h3 className={styles['h3']}>\r\n        {description}\r\n    </h3>\r\n    <div className={styles['description']}>\r\n        {descriptionFull}\r\n    </div>\r\n    <div className={cn(styles['highlight-window'], styles['mobile'])}>\r\n        <div className={styles['highlight-overlay']}></div>\r\n    </div>\r\n    <div className={styles['divider']}></div>\r\n    <div className={styles['purchase-info']}>\r\n        <div className={styles['price']}>\r\n            {currency}{price}\r\n        </div>\r\n        <button className={styles['button']}>\r\n            ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ Ð² ÐºÐ¾ÑÐ·Ð¸Ð½Ñ\r\n        </button>\r\n    </div>\r\n</div>\r\n));\r\n\r\nexport const StoreFuncPage = withStorePage(StoreFuncPageComponent);","import * as React from 'react';\r\nimport cn from 'classnames';\r\nimport { withStorePage } from '../../components/with-store-page';\r\nimport { FUNT_CURRENCY } from '../../constants';\r\nimport { TStoreItem } from '../../types';\r\nimport styles from '../../styles/store-item.module.css';\r\n\r\ntype TStoreClassPageProps = {\r\n    storeItem: TStoreItem;\r\n};\r\n\r\nclass StoreClassPageComponent extends React.PureComponent<TStoreClassPageProps> {\r\n    render() {\r\n        const {\r\n            brand,\r\n            currency = FUNT_CURRENCY,\r\n            description,\r\n            descriptionFull,\r\n            title,\r\n            price,\r\n        } = this.props.storeItem;\r\n\r\n        return (\r\n            <div className={styles['main-content']}>\r\n                <h2>\r\n                    {brand}\r\n                </h2>\r\n                <h1 className={styles['h1']}>\r\n                    {title}\r\n                </h1>\r\n                <h3 className={styles['h3']}>\r\n                    {description}\r\n                </h3>\r\n                <div className={styles['description']}>\r\n                    {descriptionFull}\r\n                </div>\r\n                <div className={cn(styles['highlight-window'], styles['mobile'])}>\r\n                    <div className={styles['highlight-overlay']}></div>\r\n                </div>\r\n                <div className={styles['divider']}></div>\r\n                <div className={styles['purchase-info']}>\r\n                    <div className={styles['price']}>\r\n                        {currency}{price}\r\n                    </div>\r\n                    <button className={styles['button']}>\r\n                        ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ Ð² ÐºÐ¾ÑÐ·Ð¸Ð½Ñ\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const StoreClassPage = withStorePage(StoreClassPageComponent);","import * as React from 'react';\r\nimport styles from './calendar-header.module.css';\r\n\r\ntype TCalendarHeaderProps = {\r\n    dayName: string,\r\n    dayNumber: number,\r\n    fullYear: number,\r\n    monthNameGenitive: string,\r\n    monthNameNominative: string,\r\n};\r\n\r\nexport const CalendarHeader = React.memo(({\r\n    dayName,\r\n    dayNumber,\r\n    fullYear,\r\n    monthNameGenitive,\r\n    monthNameNominative,\r\n}: TCalendarHeaderProps) => (\r\n    <React.Fragment>\r\n        <div className={styles['ui-datepicker-material-header']}>\r\n            <div className={styles['ui-datepicker-material-day']}>\r\n                {dayName}\r\n            </div>\r\n            <div className={styles['ui-datepicker-material-date']}>\r\n                <div className={styles['ui-datepicker-material-day-num']}>\r\n                    {dayNumber}\r\n                </div>\r\n                <div className={styles['ui-datepicker-material-month']}>\r\n                    {monthNameGenitive}\r\n                </div>\r\n                <div className={styles['ui-datepicker-material-year']}>\r\n                    {fullYear}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className={styles['ui-datepicker-header']}>\r\n            <div className={styles['ui-datepicker-title']}>\r\n                <span>\r\n                    {monthNameNominative} {fullYear}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n));","import * as React from 'react';\r\nimport { FULL_RUS_DAYS_NAMES, SHORT_RUS_DAYS_NAMES } from '../../../../constants';\r\nimport styles from './calendar-table.module.css';\r\n\r\nexport const CalendarTableHeader = React.memo(() => (\r\n    <React.Fragment>\r\n        <colgroup>\r\n            <col />\r\n            <col />\r\n            <col />\r\n            <col />\r\n            <col />\r\n            <col className={styles['ui-datepicker-week-end']} />\r\n            <col className={styles['ui-datepicker-week-end']} />\r\n        </colgroup>\r\n        <thead>\r\n            <tr>\r\n                {FULL_RUS_DAYS_NAMES.map((name, i) => (\r\n                    <th\r\n                        className={styles['th']}\r\n                        key={name}\r\n                        scope=\"col\"\r\n                        title={name}\r\n                    >\r\n                        {SHORT_RUS_DAYS_NAMES[i]}\r\n                    </th>\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n    </React.Fragment>\r\n));","import * as React from 'react';\r\nimport cn from 'classnames';\r\nimport { TCalendarRow } from '../../calendar-types';\r\nimport styles from './calendar-table.module.css';\r\n\r\ntype TCalendarTableRowProps = {\r\n    currentDate: number;\r\n    matrixRow: TCalendarRow;\r\n};\r\n\r\nexport const CalendarTableRow = React.memo(({ currentDate, matrixRow }: TCalendarTableRowProps) => (\r\n    <tr>\r\n        {matrixRow.map(({ dayNumber, isCurrentMonthDay }) => {\r\n            let className = '';\r\n            if (isCurrentMonthDay && currentDate === dayNumber) {\r\n                className = 'ui-datepicker-today';\r\n            } else if (!isCurrentMonthDay) {\r\n                className = 'ui-datepicker-other-month';\r\n            }\r\n\r\n            return (\r\n                <td\r\n                    className={cn(styles['td'], styles[className])}\r\n                    key={dayNumber}\r\n                >\r\n                    {dayNumber}\r\n                </td>\r\n            );\r\n        })}\r\n    </tr>\r\n));","import * as React from 'react';\r\nimport { TCalendarMatrix } from '../../calendar-types';\r\nimport { CalendarTableHeader } from './calendar-table-header';\r\nimport { CalendarTableRow } from './calendar-table-row';\r\nimport styles from './calendar-table.module.css';\r\n\r\ntype TCalendarTableProps = {\r\n    calendarMatrix: TCalendarMatrix;\r\n    currentDate: number;\r\n};\r\n\r\nexport const CalendarTable = React.memo(({ calendarMatrix, currentDate }: TCalendarTableProps) => (\r\n    <table className={styles['table']}>\r\n        <CalendarTableHeader />\r\n        <tbody>\r\n            {calendarMatrix.map((matrixRow, i) => (\r\n                <CalendarTableRow currentDate={currentDate} matrixRow={matrixRow} key={i} />\r\n            ))}\r\n        </tbody>\r\n    </table>\r\n));","import { FULL_RUS_DAYS_NAMES_SORTED_BY_DATE_INDEX } from '../constants';\r\n\r\nexport const getFirstDayOfDate = (date: Date): Date => (\r\n    new Date(date.getFullYear(), date.getMonth(), 1)\r\n);\r\n\r\nexport const getNextDayDate = (date: Date): Date => (\r\n    new Date(date.getFullYear(), date.getMonth(), date.getDate() + 1)\r\n);\r\n\r\nexport const getFirstDayIsSunday = (date: Date): boolean => (\r\n    getFirstDayOfDate(date).getDay() === 0\r\n);\r\n\r\nexport const getFullRusDayNameByIndex = (date: Date): string => (\r\n    FULL_RUS_DAYS_NAMES_SORTED_BY_DATE_INDEX[date.getDay()]\r\n);","import { DAYS_IN_WEEK } from '../../constants';\r\nimport {\r\n    getFirstDayIsSunday,\r\n    getFirstDayOfDate,\r\n    getNextDayDate,\r\n} from '../../utils/date-utils';\r\nimport { START_DAY_DIFF_INDEX, SUNDAY_RUS_INDEX } from './calendar-constants';\r\nimport { TDateTuple, TCalendarMatrix } from './calendar-types';\r\n\r\nconst getCalendarStartDate = (date: Date): Date => {\r\n    const firstDayOfDateIsSunday = getFirstDayIsSunday(date);\r\n    const firstDayOfDateIndex = getFirstDayOfDate(date).getDay();\r\n    const daysDiffIndex = firstDayOfDateIsSunday\r\n        ? SUNDAY_RUS_INDEX\r\n        : firstDayOfDateIndex;\r\n\r\n    return new Date(\r\n        date.getFullYear(),\r\n        date.getMonth(),\r\n        START_DAY_DIFF_INDEX - daysDiffIndex,\r\n    );\r\n};\r\n\r\nconst createDateRow = (date: Date): TDateTuple => (\r\n    Array.from({ length: DAYS_IN_WEEK }).reduce(\r\n        (acc: TDateTuple, _): TDateTuple => {\r\n            const [row, currentDate] = acc;\r\n            row.push(currentDate);\r\n\r\n            return [row, getNextDayDate(currentDate)];\r\n        },\r\n        [[], date]\r\n    )\r\n);\r\n\r\nconst createDateMatrix = (date: Date): Array<Date[]> => {\r\n    const monthOfDate = date.getMonth();\r\n    const startDate = getCalendarStartDate(date);\r\n    const result: Array<Date[]> = [];\r\n\r\n    let currentDate = startDate;\r\n    while(true) {\r\n        const [newCalendarRow, lastDate] = createDateRow(currentDate);\r\n        result.push(newCalendarRow);\r\n        currentDate = lastDate;\r\n\r\n        if (monthOfDate !== currentDate.getMonth()) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nconst createCalendarDay = (date: Date, month: number) => ({\r\n    dayNumber: date.getDate(),\r\n    isCurrentMonthDay: date.getMonth() === month,\r\n});\r\n\r\nexport const createCalendarMatrix = (date: Date): TCalendarMatrix => {\r\n    const currentMonth = date.getMonth();\r\n    const dateMatrix = createDateMatrix(date);\r\n    \r\n    return dateMatrix.map(row => row.map(date => createCalendarDay(date, currentMonth)));\r\n};","export const START_DAY_DIFF_INDEX = 2;\r\nexport const SUNDAY_RUS_INDEX = 7;","import * as React from 'react';\r\nimport {\r\n    FULL_RUS_DAYS_NAMES_SORTED_BY_DATE_INDEX,\r\n    MONTH_NAME_NOMENATIVE,\r\n    MONTH_NAME_GENITIVE,\r\n} from '../../constants';\r\nimport { CalendarHeader } from './components/calendar-header';\r\nimport { CalendarTable } from './components/calendar-table';\r\nimport { createCalendarMatrix } from './calendar-utils';\r\nimport styles from './calendar.module.css';\r\n\r\ntype TCalendarProps = {\r\n    date: Date;\r\n};\r\n\r\nexport const Calendar = React.memo(({ date }: TCalendarProps) => {\r\n    const currentDate = date.getDate();\r\n    const currentDay = date.getDay();\r\n    const fullYear = date.getFullYear();\r\n    const monthNum = date.getMonth();\r\n\r\n    const calendarMatrix = createCalendarMatrix(date);\r\n\r\n    return (\r\n        <div className={styles['ui-datepicker']}>\r\n            <CalendarHeader\r\n                dayName={FULL_RUS_DAYS_NAMES_SORTED_BY_DATE_INDEX[currentDay]}\r\n                dayNumber={currentDate}\r\n                fullYear={fullYear}\r\n                monthNameGenitive={MONTH_NAME_GENITIVE[monthNum]}\r\n                monthNameNominative={MONTH_NAME_NOMENATIVE[monthNum]}\r\n            />\r\n            <CalendarTable\r\n                calendarMatrix={calendarMatrix}\r\n                currentDate={currentDate}\r\n            />\r\n        </div>\r\n    );\r\n});","import { ComponentType } from 'react';\r\nimport { StoreFuncPage } from './pages/store-func-page';\r\nimport { StoreClassPage } from './pages/store-class-page';\r\nimport { CalendarPage } from './pages/calendar-page';\r\n\r\nexport type TRouteItem = {\r\n    component: ComponentType<any>;\r\n    label: string;\r\n    path: string;\r\n};\r\n\r\nexport const ROUTES: TRouteItem[] = [\r\n    {\r\n        component: () => null,\r\n        label: 'ÐÐ¾Ð¼Ð¾Ð¹',\r\n        path: '/',\r\n    },\r\n    {\r\n        component: StoreFuncPage,\r\n        label: 'ÐÐ°Ð³Ð°Ð·Ð¸Ð½ Ð¤ÑÐ½ÐºÑÐ¸Ñ',\r\n        path: '/store-func',\r\n    },\r\n    {\r\n        component: StoreClassPage,\r\n        label: 'ÐÐ°Ð³Ð°Ð·Ð¸Ð½ ÐÐ»Ð°ÑÑ',\r\n        path: '/store-class',\r\n    },\r\n    {\r\n        component: CalendarPage,\r\n        label: 'ÐÐ°Ð»ÐµÐ½Ð´Ð°ÑÑ',\r\n        path: '/calendar',\r\n    },\r\n];","import * as React from 'react';\r\nimport { Calendar } from '../../modules/calendar';\r\n\r\nexport const CalendarPage = React.memo(() => (\r\n    <Calendar date={new Date()}/>\r\n));","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { TopMenu } from './components/top-menu';\nimport { ROUTES } from './routes';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <TopMenu routes={ROUTES} />\n      <Switch>\n        {ROUTES.map(({ component, path }) => (\n          <Route component={component} exact key={path} path={path} />\n        ))}\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"calendar-table_table__2aY4Q\",\"th\":\"calendar-table_th__3HCnE\",\"td\":\"calendar-table_td__3_K77\",\"ui-datepicker-today\":\"calendar-table_ui-datepicker-today__1tbwi\",\"ui-datepicker-other-month\":\"calendar-table_ui-datepicker-other-month__YhPnx\",\"ui-datepicker-week-end\":\"calendar-table_ui-datepicker-week-end__1Uthq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ui-datepicker-material-header\":\"calendar-header_ui-datepicker-material-header__2mMOX\",\"ui-datepicker-material-day\":\"calendar-header_ui-datepicker-material-day__34eJy\",\"ui-datepicker-material-date\":\"calendar-header_ui-datepicker-material-date__wKvx9\",\"ui-datepicker-material-day-num\":\"calendar-header_ui-datepicker-material-day-num__M3xd_\",\"ui-datepicker-material-month\":\"calendar-header_ui-datepicker-material-month__35WNm\",\"ui-datepicker-material-year\":\"calendar-header_ui-datepicker-material-year__1IdXQ\",\"ui-datepicker-header\":\"calendar-header_ui-datepicker-header__2YkBm\",\"ui-datepicker-title\":\"calendar-header_ui-datepicker-title__vGrME\"};"],"sourceRoot":""}